@model Hotel.Controllers.LoginViewModel
@{
    ViewData["Title"] = "Login";
    Layout = null;
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Hotel Admin</title>
    <link href="https://fonts.googleapis.com/css2?family=Public+Sans:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <link rel="stylesheet" href="~/css/login.css" asp-append-version="true" />
</head>
<body>
    <div class="login-container">
        <!-- Decorative sphere -->
        <div class="sphere sphere-1"></div>
        
        <div class="login-card">
            <div class="login-header">
                <div class="logo">
                    <svg viewBox="0 0 32 32" width="32" height="32">
                        <path d="M0 12 L16 0 L32 12 L28 12 L16 4 L4 12 Z" fill="var(--primary)"/>
                        <path d="M0 20 L16 8 L32 20 L28 20 L16 12 L4 20 Z" fill="var(--primary)"/>
                        <path d="M0 28 L16 16 L32 28 L28 28 L16 20 L4 28 Z" fill="var(--primary)"/>
                    </svg>
                    <span>Materialize</span>
                </div>
                
                <h2 data-i18n="login.welcome">Welcome to Materialize! ðŸ‘‹</h2>
                <p data-i18n="login.subtitle">Please sign-in to your account and start the adventure</p>
            </div>
            
            <form asp-action="Login" asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post" class="login-form">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                
                <div class="form-group">
                    <input asp-for="UsernameOrEmail" 
                           class="form-control" 
                           placeholder="Email or Username" 
                           data-i18n-placeholder="login.emailOrUsername"
                           autocomplete="username" 
                           autofocus />
                    <span asp-validation-for="UsernameOrEmail" class="text-danger"></span>
                </div>
                
                <div class="form-group">
                    <div class="password-wrapper">
                        <input asp-for="Password" 
                               type="password" 
                               class="form-control" 
                               placeholder="Password" 
                               data-i18n-placeholder="login.password"
                               autocomplete="current-password" />
                        <button type="button" class="password-toggle" onclick="togglePassword(this)">
                            <i class="fas fa-eye-slash"></i>
                        </button>
                    </div>
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                
                <div class="form-options">
                    <label class="remember-me">
                        <input asp-for="RememberMe" type="checkbox" />
                        <span data-i18n="login.rememberMe">Remember Me</span>
                    </label>
                    <a href="#" class="forgot-password" data-i18n="login.forgotPassword">Forgot Password?</a>
                </div>
                
                <button type="submit" class="btn-login" data-i18n="login.signIn">Sign In</button>
                
                <div class="signup-prompt">
                    <span data-i18n="login.newPlatform">New on our platform?</span>
                    <a href="#" data-i18n="login.createAccount">Create an account</a>
                </div>
                
                <div class="divider">
                    <span data-i18n="login.or">or</span>
                </div>
                
                <div class="social-login">
                    <button type="button" class="social-btn facebook">
                        <i class="fab fa-facebook-f"></i>
                    </button>
                    <button type="button" class="social-btn twitter">
                        <i class="fab fa-twitter"></i>
                    </button>
                    <button type="button" class="social-btn github">
                        <i class="fab fa-github"></i>
                    </button>
                    <button type="button" class="social-btn google">
                        <i class="fab fa-google"></i>
                    </button>
                </div>
            </form>
        </div>
        
        <!-- Theme toggle -->
        <button class="theme-toggle" onclick="toggleTheme()">
            <i class="fas fa-moon"></i>
        </button>
        
        <!-- Buy Now button -->
        <a href="#" class="buy-now-btn">Buy Now</a>
    </div>
    
    <script>
        function togglePassword(button) {
            const input = button.previousElementSibling;
            const icon = button.querySelector('i');
            
            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            } else {
                input.type = 'password';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            }
        }
        
        function toggleTheme() {
            const body = document.body;
            const themeToggle = document.querySelector('.theme-toggle i');
            
            body.classList.toggle('dark-mode');
            
            if (body.classList.contains('dark-mode')) {
                themeToggle.classList.remove('fa-moon');
                themeToggle.classList.add('fa-sun');
                localStorage.setItem('darkMode', 'true');
            } else {
                themeToggle.classList.remove('fa-sun');
                themeToggle.classList.add('fa-moon');
                localStorage.setItem('darkMode', 'false');
            }
        }
        
        // Load saved theme
        const savedTheme = localStorage.getItem('darkMode') === 'true';
        if (savedTheme) {
            document.body.classList.add('dark-mode');
            document.querySelector('.theme-toggle i').classList.remove('fa-moon');
            document.querySelector('.theme-toggle i').classList.add('fa-sun');
        }
        
        // Load saved primary color
        const savedColor = localStorage.getItem('primaryColor');
        if (savedColor) {
            document.documentElement.style.setProperty('--primary', savedColor);
        }
        
        // Translations
        const translations = {
            es: {
                'login.welcome': 'Â¡Bienvenido a Materialize! ðŸ‘‹',
                'login.subtitle': 'Por favor inicia sesiÃ³n en tu cuenta y comienza la aventura',
                'login.emailOrUsername': 'Correo o Nombre de Usuario',
                'login.password': 'ContraseÃ±a',
                'login.rememberMe': 'RecuÃ©rdame',
                'login.forgotPassword': 'Â¿Olvidaste tu contraseÃ±a?',
                'login.signIn': 'Iniciar SesiÃ³n',
                'login.newPlatform': 'Â¿Nuevo en nuestra plataforma?',
                'login.createAccount': 'Crear una cuenta',
                'login.or': 'o'
            },
            en: {
                'login.welcome': 'Welcome to Materialize! ðŸ‘‹',
                'login.subtitle': 'Please sign-in to your account and start the adventure',
                'login.emailOrUsername': 'Email or Username',
                'login.password': 'Password',
                'login.rememberMe': 'Remember Me',
                'login.forgotPassword': 'Forgot Password?',
                'login.signIn': 'Sign In',
                'login.newPlatform': 'New on our platform?',
                'login.createAccount': 'Create an account',
                'login.or': 'or'
            }
        };
        
        function translatePage(lang) {
            const t = translations[lang];
            
            // Update text content
            document.querySelectorAll('[data-i18n]').forEach(element => {
                const key = element.getAttribute('data-i18n');
                if (t[key]) {
                    element.textContent = t[key];
                }
            });
            
            // Update placeholders
            document.querySelectorAll('[data-i18n-placeholder]').forEach(element => {
                const key = element.getAttribute('data-i18n-placeholder');
                if (t[key]) {
                    element.placeholder = t[key];
                }
            });
        }
        
        // Load saved language preference
        const savedLang = localStorage.getItem('preferredLanguage') || 'es';
        translatePage(savedLang);
    </script>
    
    <partial name="_ValidationScriptsPartial" />
</body>
</html>